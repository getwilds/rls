% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct.R
\name{rls_construct_policy}
\alias{rls_construct_policy}
\title{Construct a row level security policy}
\usage{
rls_construct_policy(
  name,
  table,
  as = NULL,
  command = NULL,
  role = NULL,
  using = NULL,
  check = NULL
)
}
\arguments{
\item{name}{(character) name of the policy to be created. This must be
distinct from the name of any other policy for the table. required}

\item{table}{(character) the table to apply the policy to. required}

\item{as}{(character) permissive (default) or restrictive.
permissive combines with "OR" while restrictive combines with "AND"}

\item{command}{(character) the command to which the policy applies. Valid
options are ALL (default), SELECT, INSERT, UPDATE, and DELETE}

\item{role}{(character) The role(s) to which the policy is to be applied.
The default is PUBLIC, which will apply the policy to all roles.}

\item{using}{(character) Specifies a filter that is applied to the WHERE
clause of a query. Rows for which the expression returns true will be
visible. Any rows for which the expression returns false or null will
not be visible to the user (in a SELECT), and will not be available
for modification (in an UPDATE or DELETE). Such rows are silently
suppressed; no error is reported.}

\item{check}{(character) the check condition; any SQL conditional expression
that returns a boolean. This expression will be used in INSERT and UPDATE
queries against the table if row-level security is enabled. Only rows
for which the expression evaluates to true will be allowed. Is evaluated
against the proposed new contents of the row, not the original contents}
}
\value{
s3 object of class \code{rls_policy}
}
\description{
Construct a row level security policy
}
\details{
We've chosen more intuitive names for policy parameters, so here's
a mapping of function parameters to the PostgreSQL parameters:
\itemize{
\item (this function: PostgreSQL)
\item table: on
\item command: for
\item role: to
\item check: with
}
}
\examples{
x <- rls_construct_policy(
  name = "hide_confidential",
  table = "sometable",
  check = "confidential BOOLEAN",
  using = "confidential = false"
)
x
}
\references{
\url{https://www.postgresql.org/docs/current/sql-createpolicy.html}
}
